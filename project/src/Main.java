public class Main {
    public static void main(String[] args) {

        System.out.println("Hello world!");
        // ** 변수 선언 방법.
        // 변수 이름을 지을때 주의사항. 1. 이름을 봤을때 어떤값을 나타내는지 확인 가능해야함.
        // 2. 변수명 사이 공백 사용불가 3. 대소문자 구분해서 사용 * (Apple != apple) 같지 않음.
        // 4. 예약어 사용 불가. 5. 숫자로 시작할수 없다. 6.특수문자 사용이 가능.(_,$) int user_id; int user_email;
        int i = 10;

        System.out.println(i);


        // =====================================
        // [자료형]
        // =====================================

        /* String 문자열
         * [정수형 datatype]
         * char : 문자를 표현할때 사용한다. 2byte
         * 숫자
         * byte : 1byte
         * short : 2byte
         * int : 4byte
         * long : 8byte
         * [실수형 datatype]
         * float : 4byte
         * double : 8byte
         * [논리형 datatype]
         * boolean : 1byte
         */
        // 부호        값
        //       1byte   1byte
        // [0] [0000000 0000000]
        // 0 양수 1 음수

           // 2진수 ↓ 비트연산자.(비트는 8자리만 사용가능.)
        // [0]0000000 = (-128)
        // [1]

        // [0]0000000 = 0
        // [0]0000001 = 1
        // [0]0000010 = 2
        // [0]0000011 = 3
        // [0]0000100 = 4
        // [0]0000101 = 5
        // [0]0000110 = 6
        // [0]0000111 = 7
        // [0]0001000 = 8
        // [0]1111111 = 127 1 2 4 8 16 32 64

        // 00000010 = 2
        // 00000100 = 4   ← 2 + 4
        // -----------
        // 00000110 = 6

        // ** 2의 보수
        // [0]0000001 = 1

        // 1단계 : 반전
        // [1]1111110

        // 2단계 : +1
        // [1]1111111

        // [1]1111111 = -1

        // * 127의 값에 대한 2의 보수

        // [0]1111111 = 127

        //  ↓↓

        // 1단계 반전
        // [1]0000000

        // 2단계 : +1
        // [1]0000001 = (-127)
        // ----------------------------
        // [0] 0 0 0 0 0 0 1 = 1
        // [1] 1 1 1 1 1 1 0   <- 반전

        // 부호      값
        // [0] [1111111 11111111] = 32767

        // 1단계 반전
        // [1] [0000000 00000000] = -32768

        // 2단계 : +1
        // [1] [0000000 00000001] = -32767

        // ** 마지막 값
        // [1] [0000000 00000000] = -32768

        //==============================
        // 교정 소수점
        //==============================
        //      [정수부]            [실수부]
        //  00000000 00000000. 00000000 00000000

        //==============================
        //  부동 소수점
        //==============================
        // [부호]  [지수부] 8개   [가수부] 23개 실수 float 는 소수점 7번째까지 정확한값을 사용가능.
        // [0] [0000000].[00000000000000000000000] 실수 double 은 소수점 15번째까지 사용.

        // 3.14f

    }
}